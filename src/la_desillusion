	// while (it <= draw_start && it < IMG_HEIGHT)
	// {
	// 	float rayDirX0 = data->camera_dir[0] - data->plane[0];
	// 	float rayDirY0 = data->camera_dir[1] - data->plane[1];
	// 	float rayDirX1 = data->camera_dir[0] + data->plane[0];
	// 	float rayDirY1 = data->camera_dir[1] + data->plane[1];

	// 	int	p = it - IMG_HEIGHT / 2;
	// 	float posZ = 0.5 * IMG_HEIGHT;

	// 	float rowDistance = posZ / p;

	// 	float floorStepx = rowDistance * (rayDirX1 - rayDirX0) / IMG_HEIGHT;
	// 	float floorStepY = rowDistance * (rayDirY1 - rayDirY0) / IMG_HEIGHT;

	// 	float floorX = data->player_pos[0] + rowDistance * rayDirX0;
	// 	float floorY = data->player_pos[1] + rowDistance * rayDirY0;

	// 	int	x = 0;
	// 	while (x < IMG_HEIGHT)
	// 	{
	// 		int	cellX = (int)(floorX);
	// 		int	cellY = (int)(floorY);

	// 		int	tx = (int)(TEX_WIDTH * (floorX - cellX)) & (TEX_WIDTH - 1);
	// 		int	ty = (int)(TEX_HEIGHT * (floorY - cellY)) & (TEX_HEIGHT - 1);

	// 		floorX += floorStepx;
	// 		floorY += floorStepY;
			
	// 		//DRAW TEXTURES - Maitre Pablo
	// 		/*
	// 		// choose texture and draw the pixel
	// 		int floorTexture = 3;
	// 		int ceilingTexture = 6;
	// 		Uint32 color;

	// 		// floor
	// 		color = texture[floorTexture][texWidth * ty + tx];
	// 		color = (color >> 1) & 8355711; // make a bit darker
	// 		buffer[y][x] = color;

	// 		//ceiling (symmetrical, at screenHeight - y - 1 instead of y)
	// 		color = texture[ceilingTexture][texWidth * ty + tx];
	// 		color = (color >> 1) & 8355711; // make a bit darker
	// 		buffer[screenHeight - y - 1][x] = color; */
	// 		x++;
	// 	}
	// }